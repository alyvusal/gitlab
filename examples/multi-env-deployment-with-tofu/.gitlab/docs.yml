variables:
  GIT_VERSION: v2.30.1

terraform_docs:
  stage: test
  image:
    name: quay.io/terraform-docs/terraform-docs:0.20.0
    entrypoint: [""]
  script:
    - terraform-docs markdown table --indent 2 --output-file README.md --recursive --recursive-path . $CI_PROJECT_DIR/modules
  artifacts:
    paths:
      - modules/**/README.md
  rules:
    - if: $SAST_DISABLED == "true" || $SAST_DISABLED == "1"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - modules/**/*.tf
      when: always
    - when: never

# Set up this script with one of the following authentication methods to allow pushing changes back to the repository:
#   * GITLAB_TOKEN:
#     1. Create a new personal access token (https://gitlab.com/-/profile/personal_access_tokens)
#       or Project access tokens https://gitlab.com/alyvusal/<REPO_NAME>/-/settings/access_tokens
#       with the following scopes:
#         - read_repository
#         - write_repository
#     2. Inside Settings -> CI / CD -> Variables, create the following variables:
#         GITLAB_TOKEN          Personal access token previously created.             XGE2-k445hd5fbs94v9d
#           (masked)
#   * Job token permissions:
#     1. Go to https://gitlab.com/alyvusal/<REPO_NAME>/-/settings/ci_cd#js-token-access
#     2. Enable 'Allow Git push requests to the repository' under Additional permissions

commit_docs:
  stage: test
  image:
    name: alpine/git:${GIT_VERSION}
    entrypoint: ['']
  needs:
    - job: terraform_docs
      artifacts: true
  before_script:
    - git config --global user.email "GitLab CI/CD"
    - git config --global user.name "gitlab-ci-cd@example.com"
    # if GITLAB_TOKEN will be used:
    # - git remote set-url origin "https://oauth2:${GITLAB_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git"
    - git branch
  script:
    - ls -R modules
    - echo "Adding terraform docs changes to git"
  after_script:
    - git fetch origin "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
    - git checkout "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
    - git add .
    - CHANGES=$(git status --porcelain | wc -l)
    - echo "Detected $CHANGES changes"
    - if [ "$CHANGES" -gt "0" ]; then
        git status;
        git commit -am "[Automated] Update Terraform documentation";
        git push origin "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}" -o ci.skip;
        git status;
      else
        echo "No changes to commit.";
      fi
  rules:
    - if: $SAST_DISABLED == "true" || $SAST_DISABLED == "1"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - modules/**/*.tf
      when: always
    - when: never
